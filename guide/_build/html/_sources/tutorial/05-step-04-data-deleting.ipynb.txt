{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Step 4: Deleting of records"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from techminer import RecordsDataFrame\n",
    "\n",
    "rdf = RecordsDataFrame(\n",
    "    pd.read_json(\n",
    "        'step-03.json', \n",
    "        orient='records', \n",
    "        lines=True))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Deleting of abstracts of proceedings and workshops "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from techminer import Keywords\n",
    "conf = Keywords()\n",
    "conf.add_keywords(['Conference', 'Proceeding', 'Workshop', 'Congress'])\n",
    "rdf['CONF'] = rdf['Title'].map(lambda x: True if x in conf else False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ICSIT 2019 - 10th International Conference on Society and Information Technologies, Proceedings\n",
      "International Conference on Digital Science, DSIC 2018\n",
      "ACM International Conference Proceeding Series\n",
      "Proceedings - 23rd IEEE International Conference on High Performance Computing Workshops, HiPCW 2016\n",
      "Workshop on Logistik und Echtzeit, Echtzeit 2017\n",
      "4th Workshop on Engineering Applications, WEA 2017\n",
      "10th International Conference on Knowledge Science, Engineering and Management, KSEM 2017\n",
      "19th International Conference on Business Information Systems, BIS 2016\n",
      "SISY 2015 - IEEE 13th International Symposium on Intelligent Systems and Informatics, Proceedings\n",
      "Proceedings - 2013 Tools and Methods of Program Analysis, TMPA 2013\n",
      "International Workshops on Business Information Systems, BIS 2015\n",
      "2015 National Conference on Parallel Computing Technologies, PARCOMPTECH 2015\n",
      "7th European Workshop on Probabilistic Graphical Models, PGM 2014\n",
      "Self-Organizing Systems - 7th IFIP TC 6 International Workshop, IWSOS 2013, Revised Selected Papers\n",
      "Modeling Decisions for Artificial Intelligence - 8th International Conference, MDAI 2011, Proceedings\n",
      "8th International Conference on Modeling Decisions for Artificial Intelligence, MDAI 2011\n",
      "Advances in Artificial Intelligence, SBIA 2010 - 20th Brazilian Symposium on Artificial Intelligence, Proceedings\n",
      "9th IFIP WG 6.1 Conference on e-Business, e-Services and e-Society, I3E 2009\n",
      "IFIP 19th World Computer Congress, TC 12: IFIP AI 2006 Stream\n"
     ]
    }
   ],
   "source": [
    "for title in rdf[rdf['CONF']]['Title']:\n",
    "    print(title)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Num. records before =  528\n",
      "Num. records after =  509\n"
     ]
    }
   ],
   "source": [
    "print('Num. records before = ', len(rdf))\n",
    "rdf = rdf[rdf['CONF'].map(lambda x: False if x is True else True)]\n",
    "print('Num. records after = ', len(rdf))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Deleting of documents with the same title"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Num. records before =  509\n",
      "Num. records after =  503\n"
     ]
    }
   ],
   "source": [
    "from techminer import remove_duplicate_records\n",
    "\n",
    "print('Num. records before = ', len(rdf))\n",
    "rdf = remove_duplicate_records(rdf, 'Title', match_type='fingerprint')\n",
    "print('Num. records after = ', len(rdf))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "rdf.to_json(\n",
    "    'step-04.json', \n",
    "    orient='records', \n",
    "    lines=True)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
